name: üõ†Ô∏è Builds
on:
  release:
    types:
      - created
  workflow_dispatch:

env:
  GODOT_BASE_BRANCH: 3.x

concurrency: 
  group: builds
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux-x64
            runner: ubuntu-18.04
            identifier: linux
            platform: x11
            extension: "x86_64"
          - name: Windows-x64
            runner: ubuntu-20.04
            identifier: windows
            platform: windows
            extension: "exe"

    steps:
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{ env.GODOT_BASE_BRANCH }}
          path: godot

      - uses: actions/checkout@v2
        with:
          repository: nathanfranke/gdaudioyt
          path: godot/modules/gdaudioyt

      - name: Install dependencies
        shell: sh
        run: |
          sudo apt-get install build-essential scons pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm

      - name: (Windows) Install dependencies
        if: ${{ matrix.identifier == 'windows' }}
        shell: sh
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: Setup Godot build cache
        uses: ./godot/.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.identifier }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./godot/.github/actions/godot-deps

      - name: Make global bin/ folder (to fix godot-build error)
        shell: sh
        run: |
          mkdir ./bin/

      - name: Compile Godot Tools
        uses: ./godot/.github/actions/godot-build
        with:
          sconsflags: --directory='${{ github.workspace }}/godot'
          platform: x11
          target: release_debug
          tools: true

      - name: Write Build Configuration
        shell: sh
        run: |
          cat << EOT >> '${{ github.workspace }}/godot/custom.py'
          disable_3d = "yes"
          production = "yes"
          deprecated = "no"
          minizip = "no"
          module_arkit_enabled = "no"
          module_bmp_enabled = "no"
          module_bullet_enabled = "no"
          module_camera_enabled = "no"
          module_csg_enabled = "no"
          module_dds_enabled = "no"
          module_enet_enabled = "no"
          module_etc_enabled = "no"
          module_gdnative_enabled = "no"
          module_gdnavigation_enabled = "no"
          module_gridmap_enabled = "no"
          module_hdr_enabled = "no"
          module_jpg_enabled = "no"
          module_jsonrpc_enabled = "no"
          module_ogg_enabled = "no"
          module_opensimplex_enabled = "no"
          module_tga_enabled = "no"
          module_theora_enabled = "no"
          module_tinyexr_enabled = "no"
          module_upnp_enabled = "no"
          module_visual_script_enabled = "no"
          module_vorbis_enabled = "no"
          module_webm_enabled = "no"
          module_webp_enabled = "no"
          EOT

      - name: Compile Godot Export Template
        uses: ./godot/.github/actions/godot-build
        with:
          sconsflags: --directory='${{ github.workspace }}/godot'
          platform: ${{ matrix.platform }}
          target: release
          tools: false

      - uses: actions/checkout@v2
        with:
          path: project

      - name: (Linux) Create Export Preset
        if: ${{ matrix.identifier == 'linux' }}
        shell: sh
        run: |
          cat << EOT >> '${{ github.workspace }}/project/export_presets.cfg'
          [preset.0]
          name="EXPORT_PRESET"
          platform="Linux/X11"
          [preset.0.options]
          custom_template/release="${{ github.workspace }}/godot/bin/godot.x11.opt.64"
          EOT

      - name: (Windows) Create Export Preset
        if: ${{ matrix.identifier == 'windows' }}
        shell: sh
        run: |
          cat << EOT >> '${{ github.workspace }}/project/export_presets.cfg'
          [preset.0]
          name="EXPORT_PRESET"
          platform="Windows Desktop"
          [preset.0.options]
          custom_template/release="${{ github.workspace }}/godot/bin/godot.windows.opt.64.exe"
          application/icon="res://App/Press/Logos/logo_bg.ico"
          EOT

      - name: Build Project
        shell: sh
        run: |
          mkdir '${{ github.workspace }}/build'
          xvfb-run '${{ github.workspace }}/godot/bin/godot.x11.opt.tools.64' --audio-driver Dummy --path '${{ github.workspace }}/project' --export EXPORT_PRESET '${{ github.workspace }}/build/OpenPlayer.${{ matrix.extension }}'

      - name: Get version name
        id: version
        run: echo ::set-output name=version::${GITHUB_REF#refs/*/}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: OpenPlayer_${{ steps.version.outputs.version }}_${{ matrix.name }}
          path: ${{ github.workspace }}/build/
